#+TITLE: Crossbow

A dynamic, interactive programming language.

Solve problems with arrows.

* TODO
- next
  - rework operators to be functions that can be partially or fully applied
  - file input
- language features
  - [ ] variable allocation
  - [ ] scoping rules
  - [ ] function definition
  - [ ] predicates, bools and truthiness
  - [ ] left-partiality e.g 1+ allowed as well as +1
  - [ ] 0, [] and False all falsy???
  - [ ] control flow like splitif? or masking like APL?
  - [ ] function values
  - [ ] functions applied to functions is just composition
  - [ ] partial application for e.g. 1,2,3|+,-,+|4,5,6 = 5,-3,9
  - [X] Pipe one thing to another
  - [ ] easy collection literals (e,g, 1 2 3 or 1,2,3) without ambiguity e.g is 1 [1] or 1
  - [ ] Shortcuts for referring to output of previous line / assignment
  - [ ] Functoriality by default (e.g. [1,2,3] + 1 fmaps the addition)
  - [ ] explicit casting
  - [ ] text handling
  - [ ] easy file input
  - [ ] if no file input, assume dealing with STDIN?
  - [X] Basic arithmetic
  - [X] Single pipes
- ui features
  - [ ] Character-by-character interface
  - [ ] intermediate state display by default
  - [ ] tree mode; curses shows splits as a graph
  - [ ] native terminal colors (see tetris, no curses)
  - [ ] kb shortcuts for skipping between clauses
  - [ ] Display pipe result, truncated, in real time
- standard library
  - [ ] simple parsing
  - [ ] sorting
  - [ ] search
  - [ ] DS from prims (trees from list-nests, etc)
  - [ ] assoc lists
  - [ ] map utils like countmap
  - [ ] bitwise stuff
- misc goals
  - [ ] solve 2021 AOC day by day
  - [ ] compiled backend
  - [ ] an interpreter / compiler written in Crossbow
  - [ ] model for actual IO computation
