# Day 1
aoc 1 | ints | pairs | count `<
aoc 1 | ints | windows 3 | sum! | pairs | count `<

# Day 2
sub <- {case (head $0) [['u', negate [0, ix 1 $0]], ['d', [0, ix 1 $0]], ['f', [ix 1 $0, 0]]]}
d2 <- (aoc 2 | lines | {words | second int | first fst}! | sub!)
d2 | sum | `*
d2 | fold {$0|[+ (fst $1),+ (* (fst $1) (thd $0)),+(snd $1)]} [0, 0, 0] | take 2 | `*

# Day 3
d3 <- (aoc 3 | lines | int!!)
d3 | transpose | fork 2 | [mode!, antimode!] | bits! | `*
i <- 0 | d3 | map (ix (i)) | mode | {m <- $0} | trace m | trace i | d3 | filter {== (m) (ix (i) $0)} | length
