# Day 1

# Part 1
aoc 1 | ints | pairs | count `<

# Part 2
aoc 1 | ints | windows 3 | sum! | pairs | count `<


# Day 2
sub <- {case (head $0) [['u', negate [0, ix 1 $0]], ['d', [0, ix 1 $0]], ['f', [ix 1 $0, 0]]]}
d2 <- (aoc 2 | lines | {words | second int | first fst}! | sub!)

# Part 1
d2 | sum | `*

# Part 2
d2 | fold {$0 | [+ (fst $1), + (* (fst $1) (thd $0)), + (snd $1)]} [0, 0, 0] | take 2 | `*


# Day 3
d3 <- (aoc 3 | lines | int!!)
favouring <- {mfn <- $1 | d3m <- mfn $2 | $2 | counts | snd! | `== | if | $0 | d3m}
step <- {i <- $2 | map (ix (i)) $1 | $0 | {m <- $0} | filter {== (m) (ix (i) $0)} $1}

# Part 1
d3 | transpose | fork 2 | [mode!, antimode!] | bits! | `*

# Part 2
[fold (step (favouring 1 mode)) (d3) 0:11, fold (step (favouring 0 antimode)) (d3) 0:11] | head! | bits! | `*
